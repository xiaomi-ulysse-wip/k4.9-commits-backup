From 5cf75cfbcd379541bf1adc8c026a4d17ae21657d Mon Sep 17 00:00:00 2001
From: Artem Borisov <dedsa2002@gmail.com>
Date: Sun, 28 Oct 2018 18:53:50 +0400
Subject: [PATCH 069/110] drivers: fingerprint: gf3208_ugg: Convert to wakeup
 sources

---
 drivers/input/fingerprint/gf3208_ugg/gf_spi.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/drivers/input/fingerprint/gf3208_ugg/gf_spi.c b/drivers/input/fingerprint/gf3208_ugg/gf_spi.c
index 02662161e720..9905a5bf86c3 100644
--- a/drivers/input/fingerprint/gf3208_ugg/gf_spi.c
+++ b/drivers/input/fingerprint/gf3208_ugg/gf_spi.c
@@ -40,7 +40,6 @@
 #include <linux/fb.h>
 #include <linux/pm_qos.h>
 #include <linux/cpufreq.h>
-#include <linux/wakelock.h>
 #include <linux/proc_fs.h>
 #include "gf_spi.h"
 
@@ -72,7 +71,7 @@ static int SPIDEV_MAJOR;
 static DECLARE_BITMAP(minors, N_SPI_MINORS);
 static LIST_HEAD(device_list);
 static DEFINE_MUTEX(device_list_lock);
-static struct wake_lock fp_wakelock;
+static struct wakeup_source fp_wakelock;
 static struct gf_dev gf;
 
 extern int fpsensor;
@@ -490,7 +489,7 @@ static irqreturn_t gf_irq(int irq, void *handle)
 {
 #if defined(GF_NETLINK_ENABLE)
 	char temp = GF_NET_EVENT_IRQ;
-	wake_lock_timeout(&fp_wakelock, msecs_to_jiffies(WAKELOCK_HOLD_TIME));
+	__pm_wakeup_event(&fp_wakelock, msecs_to_jiffies(WAKELOCK_HOLD_TIME));
 	sendnlmsg(&temp);
 #elif defined (GF_FASYNC)
 	struct gf_dev *gf_dev = &gf;
@@ -742,7 +741,7 @@ static int gf_probe(struct platform_device *pdev)
 
 	gf_dev->irq = gf_irq_num(gf_dev);
 
-	wake_lock_init(&fp_wakelock, WAKE_LOCK_SUSPEND, "fp_wakelock");
+	wakeup_source_init(&fp_wakelock, "fp_wakelock");
 	status = request_threaded_irq(gf_dev->irq, NULL, gf_irq,
 			IRQF_TRIGGER_RISING | IRQF_ONESHOT,
 			"gf", gf_dev);
@@ -803,7 +802,7 @@ static int gf_remove(struct platform_device *pdev)
 {
 	struct gf_dev *gf_dev = &gf;
 
-	wake_lock_destroy(&fp_wakelock);
+	wakeup_source_trash(&fp_wakelock);
 	if (gf_dev->irq)
 		free_irq(gf_dev->irq, gf_dev);
 
-- 
2.20.1

