From 474f33ffabcccdc60817e0ab3cb4401b6a23bb3a Mon Sep 17 00:00:00 2001
From: AngeloGioacchino Del Regno <kholk11@gmail.com>
Date: Sat, 23 May 2020 11:59:42 +0200
Subject: [PATCH 44/99] q6core: Add support for legacy Q6 service versions

Instead of throwing an error everytime and falling back to old
service initialization and handling, in case the DSP firmware
does NOT return the services versions, suppose that we are
dealing with legacy DSP firmwares on legacy SoCs and also that
the all the supported legacy SoCs have got V1 service versions.

This is true and usable for a number of legacy SoCs, like
MSM8956/76, 8996, 8998, SDM630/636/660.
---
 techpack/audio/dsp/q6core.c           | 32 ++++++++++++++++++++++++++-
 techpack/audio/include/dsp/q6adm-v2.h |  1 +
 techpack/audio/include/dsp/q6afe-v2.h |  2 ++
 techpack/audio/include/dsp/q6asm-v2.h |  1 +
 4 files changed, 35 insertions(+), 1 deletion(-)

diff --git a/techpack/audio/dsp/q6core.c b/techpack/audio/dsp/q6core.c
index b3a2e5cabbd9..43540cab1675 100644
--- a/techpack/audio/dsp/q6core.c
+++ b/techpack/audio/dsp/q6core.c
@@ -26,6 +26,11 @@
 #include <ipc/apr.h>
 #include "adsp_err.h"
 
+/* For legacy version retrieval */
+#include <dsp/q6lsm.h>
+#include <dsp/q6adm-v2.h>
+#include <dsp/q6afe-v2.h>
+
 #define TIMEOUT_MS 1000
 /*
  * AVS bring up in the modem is optimitized for the new
@@ -573,6 +578,7 @@ static int q6core_get_avcs_fwk_version(void)
                 break;
         }
         mutex_unlock(&(q6core_lcl.ver_lock));
+
         return ret;
 }
 
@@ -633,6 +639,24 @@ size_t q6core_get_fwk_version_size(uint32_t service_id)
 }
 EXPORT_SYMBOL(q6core_get_fwk_version_size);
 
+static int q6core_get_legacy_avcs_fwk_version(uint32_t service_id)
+{
+	switch (service_id) {
+	case APRV2_IDS_SERVICE_ID_ADSP_LSM_V:
+		return LSM_API_VERSION_V2;
+	case APRV2_IDS_SERVICE_ID_ADSP_ADM_V:
+		return ADSP_ADM_API_VERSION_V1;
+	case APRV2_IDS_SERVICE_ID_ADSP_ASM_V:
+		return ADSP_ASM_API_VERSION_V1;
+	case APRV2_IDS_SERVICE_ID_ADSP_AFE_V:
+		return AFE_API_VERSION_V1;
+	default:
+		break;
+	}
+
+	return -EOPNOTSUPP;
+}
+
 /**
  * q6core_get_avcs_version_per_service -
  *       to get api version of a particular service
@@ -653,7 +677,13 @@ int q6core_get_avcs_api_version_per_service(uint32_t service_id)
 
         ret = q6core_get_avcs_fwk_version();
         if (ret < 0) {
-                pr_err("%s: failure in getting AVCS version\n", __func__);
+		if (ret == -EOPNOTSUPP) {
+			/* Look in legacy support... */
+			ret = q6core_get_legacy_avcs_fwk_version(service_id);
+		} else {
+			pr_err("%s: failure in getting AVCS version\n",
+			       __func__);
+		}
                 return ret;
         }
 
diff --git a/techpack/audio/include/dsp/q6adm-v2.h b/techpack/audio/include/dsp/q6adm-v2.h
index 4fa2eac0845a..e2676bc93267 100644
--- a/techpack/audio/include/dsp/q6adm-v2.h
+++ b/techpack/audio/include/dsp/q6adm-v2.h
@@ -60,6 +60,7 @@ enum {
 #define MAX_COPPS_PER_PORT 0x8
 #define ADM_MAX_CHANNELS 32
 
+#define ADSP_ADM_API_VERSION_V1 1
 #define ADSP_ADM_API_VERSION_V3 3
 
 /* multiple copp per stream. */
diff --git a/techpack/audio/include/dsp/q6afe-v2.h b/techpack/audio/include/dsp/q6afe-v2.h
index 4cfcf3b14ecc..70ded4c17ab4 100644
--- a/techpack/audio/include/dsp/q6afe-v2.h
+++ b/techpack/audio/include/dsp/q6afe-v2.h
@@ -41,6 +41,8 @@
 
 #define AFE_CLK_VERSION_V1    1
 #define AFE_CLK_VERSION_V2    2
+
+#define AFE_API_VERSION_V1		1
 #define AFE_API_VERSION_SUPPORT_SPV3	2
 #define AFE_API_VERSION_V3		3
 typedef int (*routing_cb)(int port);
diff --git a/techpack/audio/include/dsp/q6asm-v2.h b/techpack/audio/include/dsp/q6asm-v2.h
index 43c55285f4d8..a326b963e699 100644
--- a/techpack/audio/include/dsp/q6asm-v2.h
+++ b/techpack/audio/include/dsp/q6asm-v2.h
@@ -111,6 +111,7 @@
 #define ASM_LITTLE_ENDIAN 0
 #define ASM_BIG_ENDIAN 1
 
+#define ADSP_ASM_API_VERSION_V1   1
 #define ADSP_ASM_API_VERSION_V2   2
 
 /* PCM_MEDIA_FORMAT_Version */
-- 
2.20.1

